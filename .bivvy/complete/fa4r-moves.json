{
  "Climb": "fa4r",
  "moves": [
    {
      "id": "1",
      "status": "complete",
      "description": "Create root directories and base configuration files",
      "details": "Create the top-level `apps/`, `packages/`, and `tooling/` directories. Also create the root `pnpm-workspace.yaml`, `turbo.json`, and `tsconfig.json` files with content based on the directory structure guide."
    },
    {
      "id": "2",
      "status": "complete",
      "description": "Scaffold the `tooling/` directory",
      "details": "Create the directory structure and configuration files for `eslint`, `prettier`, `tsconfig`, and `jest` inside the `tooling/` directory as specified in `docs/directory-structure.md`."
    },
    {
      "id": "3",
      "status": "complete",
      "description": "Scaffold the `packages/` directory",
      "details": "Create the directory structure for shared packages (`api`, `db`, `lib`, `ui`), including their respective `src` directories and `package.json` files."
    },
    {
      "id": "4",
      "status": "complete",
      "description": "Scaffold the `apps/web` directory",
      "details": "Create the full directory structure for the Next.js application inside `apps/web`, including all specified subdirectories and configuration files."
    },
    {
      "id": "5",
      "status": "complete",
      "description": "Relocate existing project files into the new structure",
      "details": "Move all relevant existing files and directories from the root into their new homes within the `apps/` and `packages/` structure. Files without a clear destination will be flagged for review."
    },
    {
      "id": "6",
      "status": "complete",
      "description": "Validate the workspace and finalize the structure",
      "details": "Run `pnpm install` to verify the workspace integrity. Ensure the final structure is an exact match of the guide. Remove any empty directories left over from the migration."
    }
  ]
} 